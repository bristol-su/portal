# This is a Docker Compose configuration
# intended for development purposes only

version: '3'

volumes:
  db: {}

services:
  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: portal-test
      MYSQL_USER: portal-test
      MYSQL_PASSWORD: portal-test
      MYSQL_RANDOM_ROOT_PASSWORD: 'true'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db:/var/lib/mysql
  app:
    build:
      context: .
      dockerfile: ./build/Dockerfile-php
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: portal-test
      DB_USERNAME: portal-test
      DB_PASSWORD: portal-test
      MAIL_DRIVER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      AWS_STATIC_BUCKET: bristol-su-static-bucket
      AWS_STATIC_FOLDER: committee-portal
      AWS_STATIC_URL: s3.eu-west-2.amazonaws.com
      MIX_AWS_STATIC_BUCKET: bristol-su-static-bucket
      MIX_AWS_STATIC_FOLDER: committee-portal
      MIX_AWS_STATIC_URL: s3.eu-west-2.amazonaws.com
      COOKIE_DOMAIN: localhost:8080
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      QUEUE_CONNECTION: database
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      LOG_CHANNEL: daily
      FILESYSTEM_DRIVER: local
      APP_NAME: Portal
      APP_ENV: local
      APP_KEY: "base64:gDV+W0mZpt3g3wdh7THxoSVp9F76tC+2UR2qTKVF7DM="
      APP_DEBUG: "true"
      APP_URL: http://localhost:8080
      API_URL: http://localhost:8080/api
      CONTROL_API_PREFIX: /api/control
    ports:
      - ${DEV_PORT:-8080}:80
    volumes:
      - ./:/app
    entrypoint: ["/app/build/entrypoint.app.sh", "apache2-foreground"]
  node:
    image: node:alpine
    working_dir: /app
    environment:
      MIX_APP_URL: "http://localhost:8080"
      MIX_API_URL: "http://localhost:8080/api"
      MIX_CONTROL_API_URL: "http://localhost:8080/api/control"
    volumes:
      - ./:/app
    entrypoint: /app/build/entrypoint.node.sh
  mailhog:
    image: mailhog/mailhog
    ports:
      - ${DEV_MAIL_PORT:-8025}:8025
