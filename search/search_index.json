{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Portal \u00b6 The Portal is an open source sandbox platform, designed in partnership by Bristol SU and ElbowSpace Ltd , to facilitate dynamic Students' Union workflows such as Reaffiliation. View the code on our GitHub . Add some screenshots You can submit an issue on GitHub or on our service desk .","title":"Introduction"},{"location":"#the_portal","text":"The Portal is an open source sandbox platform, designed in partnership by Bristol SU and ElbowSpace Ltd , to facilitate dynamic Students' Union workflows such as Reaffiliation. View the code on our GitHub . Add some screenshots You can submit an issue on GitHub or on our service desk .","title":"The Portal"},{"location":"build/actions/","text":"Actions \u00b6 Actions are a powerful tool for automating common tasks on the portal. When a user takes an action such as uploading a file or filling in a form, we can do something off the back of that. This could be sending an email, tagging a group, or sending the event to Integromat to do something more advanced. Creating an Action \u00b6 Head to the module through the build side of the site, and select the 'Actions' tab. The + button will add a new action. Having given a name, you should set up what should happen to run the action. You can usually leave 'Queue action?' unticked. Above: Create a new action The available 'What should happen' depends on the module. If you expect to see an event here that doesn't exist, let us know. Also select the action - these will always be the same. Once you're ready, press 'Create' to create the action. Map fields & data \u00b6 Having created your action, you should press 'Map Fields' to map data across. Why do we need to map fields? I'd like to send a student an email when I update the status of a document they've uploaded. To do this, I have to find the email address of the person who uploaded the file. This data is held in the event, so I have to map the email address from the event to the email address field in the email action. Above: Map event fields The available fields are shown at the top of the dialog. Copy the {{ }} placeholder for the field you want to map, and paste it into the action settings. These will be replaced when the action is executed.","title":"Actions"},{"location":"build/actions/#actions","text":"Actions are a powerful tool for automating common tasks on the portal. When a user takes an action such as uploading a file or filling in a form, we can do something off the back of that. This could be sending an email, tagging a group, or sending the event to Integromat to do something more advanced.","title":"Actions"},{"location":"build/actions/#creating_an_action","text":"Head to the module through the build side of the site, and select the 'Actions' tab. The + button will add a new action. Having given a name, you should set up what should happen to run the action. You can usually leave 'Queue action?' unticked. Above: Create a new action The available 'What should happen' depends on the module. If you expect to see an event here that doesn't exist, let us know. Also select the action - these will always be the same. Once you're ready, press 'Create' to create the action.","title":"Creating an Action"},{"location":"build/actions/#map_fields_data","text":"Having created your action, you should press 'Map Fields' to map data across. Why do we need to map fields? I'd like to send a student an email when I update the status of a document they've uploaded. To do this, I have to find the email address of the person who uploaded the file. This data is held in the event, so I have to map the email address from the event to the email address field in the email action. Above: Map event fields The available fields are shown at the top of the dialog. Copy the {{ }} placeholder for the field you want to map, and paste it into the action settings. These will be replaced when the action is executed.","title":"Map fields &amp; data"},{"location":"build/activity/","text":"New Activity \u00b6 You can deliver any service you would like to through the portal by creating a new activity. An activity is a service delivered through the portal, such as Reaffiliation, expense claims, complaints and more. Click on your initials in the top right of the page, and select 'Build'. This is where anything related to the building of services is kept. From here, head to 'Manage Activities' and click the + button to add a new activity. Activity Form \u00b6 Basic Information URL Audience Who works together? Completion Date availability Every activity should have a public facing name and description, to help students figure out what the service delivers and what's involved in completing it. The slug defines at what URL the activity will be accessible. With a slug of 'reaffiliation', the full URL would be https://portal.bristolsu.org.uk/p/reaffiliation . Within an activity, you are able to set who is able to complete it by setting an audience. For example, you may only want final year students to be able to access career advice, or only committee members to be able to reaffiliate. Select the group of people who can interact with the service, and the group of people who are the admins for the service. Some services may only concern a user, such as an exam appeals service. For these, any data uploaded is private to the user. Some services concern groups instead, such as Reaffiliation. Anyone in the group should be able to see the uploaded data for the group. You can select which of the user/group/role selection you'd like for your activity from this page. You can alter how services should work when they've finished. 'Once': For something like Reaffiliation, once it's done it's done. 'Multiple Times': For something like an expense claim, you'd like to be able to do the service again and again. You can go back and see previous submissions, or start a new one. 'Never': Finally, some services can never be completed. For example, an equipment list should be maintained during the year. If you leave this empty, the activity will always be shown. If you give it a start and end date, the activity will only be available during those times.","title":"New Activity"},{"location":"build/activity/#new_activity","text":"You can deliver any service you would like to through the portal by creating a new activity. An activity is a service delivered through the portal, such as Reaffiliation, expense claims, complaints and more. Click on your initials in the top right of the page, and select 'Build'. This is where anything related to the building of services is kept. From here, head to 'Manage Activities' and click the + button to add a new activity.","title":"New Activity"},{"location":"build/activity/#activity_form","text":"Basic Information URL Audience Who works together? Completion Date availability Every activity should have a public facing name and description, to help students figure out what the service delivers and what's involved in completing it. The slug defines at what URL the activity will be accessible. With a slug of 'reaffiliation', the full URL would be https://portal.bristolsu.org.uk/p/reaffiliation . Within an activity, you are able to set who is able to complete it by setting an audience. For example, you may only want final year students to be able to access career advice, or only committee members to be able to reaffiliate. Select the group of people who can interact with the service, and the group of people who are the admins for the service. Some services may only concern a user, such as an exam appeals service. For these, any data uploaded is private to the user. Some services concern groups instead, such as Reaffiliation. Anyone in the group should be able to see the uploaded data for the group. You can select which of the user/group/role selection you'd like for your activity from this page. You can alter how services should work when they've finished. 'Once': For something like Reaffiliation, once it's done it's done. 'Multiple Times': For something like an expense claim, you'd like to be able to do the service again and again. You can go back and see previous submissions, or start a new one. 'Never': Finally, some services can never be completed. For example, an equipment list should be maintained during the year. If you leave this empty, the activity will always be shown. If you give it a start and end date, the activity will only be available during those times.","title":"Activity Form"},{"location":"build/logic/","text":"Managing logic groups \u00b6 Logic groups have already been used extensively to control who can see and do what on the portal. They are dynamically built groups of users based on a set of conditions, such as all users in a committee position of a sports club. You can build your own logic groups to define custom sets of users. Creating a logic group \u00b6 Head to 'Create Logic' on the build side. Once you've given a name and description to a logic group you will be able to add filters. These fall into four categories: All true: All the filters here MUST be met. Any true: At least one of the filters here must be met. All false: All the filters here must be false. Any false: At least one of these filters must not be met. When adding a filter, select one of the options Above: A list of filters You should add a name for the filter, and fill in any settings required for the filter. Click 'Submit' to save the filter, and 'Finish' to save the logic group. Above: Adding a new filter It may take a few minutes for us to figure out who is in the group, but the group will keep itself up to date going forward. Note If you'd like more examples of logic groups you can create, please contact us.","title":"Logic Groups"},{"location":"build/logic/#managing_logic_groups","text":"Logic groups have already been used extensively to control who can see and do what on the portal. They are dynamically built groups of users based on a set of conditions, such as all users in a committee position of a sports club. You can build your own logic groups to define custom sets of users.","title":"Managing logic groups"},{"location":"build/logic/#creating_a_logic_group","text":"Head to 'Create Logic' on the build side. Once you've given a name and description to a logic group you will be able to add filters. These fall into four categories: All true: All the filters here MUST be met. Any true: At least one of the filters here must be met. All false: All the filters here must be false. Any false: At least one of these filters must not be met. When adding a filter, select one of the options Above: A list of filters You should add a name for the filter, and fill in any settings required for the filter. Click 'Submit' to save the filter, and 'Finish' to save the logic group. Above: Adding a new filter It may take a few minutes for us to figure out who is in the group, but the group will keep itself up to date going forward. Note If you'd like more examples of logic groups you can create, please contact us.","title":"Creating a logic group"},{"location":"build/module/","text":"Add a module \u00b6 Once you've added an activity, you can add modules to it to add functionality. A module is a step a user must take to complete the activity, such as uploading their constitution or confirming they've completed training. Step one is choosing the type of module you want to add. Select the module type as the first step. You can then build up the module Add information about the module Access, see and complete modules \u00b6 There are three main settings to configure here. You should select the groups of people who Can see the module exists. This is useful for hiding modules from people who don't need to do it, such as if you had a module only for sports clubs. Are able to access the module. If you can't access the module you see it as greyed out, which is useful for if you can only complete a module once you've completed a previous one. Must complete the module. This will prevent the user from finishing the activity if they haven't finished this module. If you can see the module but can't access it you'll see the module as 'locked'. How do different settings look to a user? Can see the module Can access the module Must complete the module Yes Yes Yes Yes Yes No Yes No Yes Yes No No No Yes/No Yes/No Module Settings \u00b6 Each module will have settings to control how the page should work. These depend on the module type, so we've explained them in the 'Module' section. Module Permissions \u00b6 You can control exactly who can do what on the page. Usually you should set this to the same as the 'audience' dropdown when creating the activity. By setting a permission to 'No-one', the functionality will be removed. You can use this to take away the more complex functionality of modules such as being able to comment on a file. The permissions listed are both for the admin and the student page, so you can control what staff can do in addition.","title":"Adding Modules"},{"location":"build/module/#add_a_module","text":"Once you've added an activity, you can add modules to it to add functionality. A module is a step a user must take to complete the activity, such as uploading their constitution or confirming they've completed training. Step one is choosing the type of module you want to add. Select the module type as the first step. You can then build up the module Add information about the module","title":"Add a module"},{"location":"build/module/#access_see_and_complete_modules","text":"There are three main settings to configure here. You should select the groups of people who Can see the module exists. This is useful for hiding modules from people who don't need to do it, such as if you had a module only for sports clubs. Are able to access the module. If you can't access the module you see it as greyed out, which is useful for if you can only complete a module once you've completed a previous one. Must complete the module. This will prevent the user from finishing the activity if they haven't finished this module. If you can see the module but can't access it you'll see the module as 'locked'. How do different settings look to a user? Can see the module Can access the module Must complete the module Yes Yes Yes Yes Yes No Yes No Yes Yes No No No Yes/No Yes/No","title":"Access, see and complete modules"},{"location":"build/module/#module_settings","text":"Each module will have settings to control how the page should work. These depend on the module type, so we've explained them in the 'Module' section.","title":"Module Settings"},{"location":"build/module/#module_permissions","text":"You can control exactly who can do what on the page. Usually you should set this to the same as the 'audience' dropdown when creating the activity. By setting a permission to 'No-one', the functionality will be removed. You can use this to take away the more complex functionality of modules such as being able to comment on a file. The permissions listed are both for the admin and the student page, so you can control what staff can do in addition.","title":"Module Permissions"},{"location":"modules/assign-roles/","text":"","title":"Assign Roles"},{"location":"modules/data-entry/","text":"","title":"Data Entry"},{"location":"modules/file-upload/","text":"","title":"File Upload"},{"location":"modules/static-page/","text":"","title":"Static Page"},{"location":"modules/typeform/","text":"","title":"Typeform"},{"location":"using/admin/","text":"","title":"As an admin"},{"location":"using/student/","text":"","title":"As a student"}]}